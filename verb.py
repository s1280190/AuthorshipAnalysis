# -*- coding: utf-8 -*-
"""verb.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KvKvUZLcpQodKbzT0LfQsFtXfosohbGU
"""

import nltk
nltk.download('all')

## This cord works, but it haven't completely finished yet

f = open('***.txt','r')
input_text = f.read()

tokens = nltk.word_tokenize(input_text)

tagged_tokens = nltk.pos_tag(tokens)
print(tagged_tokens)
vbg = 0 ## count VBG
arranged = 0 ## count arranged future
planned = 0 ## count planned future

for n in range(len(tokens)-2):
  if(tagged_tokens[n][1] == 'VBG'): 
    vbg += 1
    if(tokens[n] == 'going') and (tokens[n+1] == 'to'):
      if(tagged_tokens[n+2][1] == 'VB'): ## if "going to" + verb
        ## arranged future
        arranged += 1
      else: ## if "going to" + noun, "the" + noun, etc.
        ## planned future
        planned += 1
    else: ## if "**ing" except "going"
      ## planned future
      planned += 1

print("Number of VBG: ", vbg)
print("arranged future: ", arranged)
print("planned future:  ", planned)